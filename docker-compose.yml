################################################################
# ~/BillionMail/docker-compose.yml
#
# - Automatically initializes Postgres with a database/user via init.sql
# - Adds a “composer” service to run `composer install` on ./core (if you need it)
# - Waits for Postgres to be fully ready before starting core-billionmail
# - Relies on an existing external network named “coolify”
################################################################

version: "3.8"

services:

  ##############################################################################
  # 1) PostgreSQL: automatically create DB, user, and grant privileges via init.sql
  ##############################################################################
pgsql-billionmail:
  image: postgres:17.4-alpine
  container_name: billionmail-pgsql-billionmail-1
  hostname: pgsql
  volumes:
    - ./postgresql-data:/var/lib/postgresql/data
    - ./init.sql:/docker-entrypoint-initdb.d/init.sql
  environment:
    - TZ=${TZ}
    - POSTGRES_DB=${DBNAME}         # “billionmail”
    - POSTGRES_USER=${DBUSER}       # “billionmail”
    - POSTGRES_PASSWORD=${DBPASS}   # “NauF7ysRYyt9HTOiOn4JjIAL3QcRZnzj”
  healthcheck:
    test: ["CMD-SHELL", "pg_isready -U ${DBUSER} -d ${DBNAME}"]
    interval: 5s
    timeout: 5s
    retries: 5
    start_period: 10s
  ports:
    - "${SQL_PORT:-127.0.0.1:25432}:5432"
  networks:
    - coolify


  ##############################################################################
  # 2) Redis: for caching/queueing (used by BillionMail)
  ##############################################################################
  redis-billionmail:
    image: redis:7.4.2-alpine
    container_name: billionmail-redis-billionmail-1
    hostname: redis
    entrypoint: ["/bin/sh","/redis-conf.sh"]
    volumes:
      - ./redis-data:/data
      - ./conf/redis/redis-conf.sh:/redis-conf.sh
    environment:
      - TZ=${TZ}
      - REDISPASS=${REDISPASS}
    sysctls:
      - net.core.somaxconn=4096
    restart: always
    ports:
      # Map localhost:26379 → container 6379
      - "${REDIS_PORT:-127.0.0.1:26379}:6379"
    networks:
      - coolify

  ##############################################################################
  # 3) Rspamd: spam filtering
  ##############################################################################
  rspamd-billionmail:
    image: billionmail/rspamd:1.1
    container_name: billionmail-rspamd-billionmail-1
    hostname: rspamd
    depends_on:
      - redis-billionmail
    environment:
      - TZ=${TZ}
      - REDISPASS=${REDISPASS}
    volumes:
      - ./conf/rspamd/local.d:/etc/rspamd/local.d
      - ./conf/rspamd/statistic.conf:/etc/rspamd/statistic.conf
      - ./conf/rspamd/rspamd.conf:/etc/rspamd/rspamd.conf
      - ./rspamd-data:/var/lib/rspamd
      - ./logs/rspamd:/var/log/rspamd
    restart: always
    networks:
      - coolify

  ##############################################################################
  # 4) Dovecot: IMAP/POP3 server
  ##############################################################################
  dovecot-billionmail:
    image: billionmail/dovecot:1.3
    container_name: billionmail-dovecot-billionmail-1
    hostname: dovecot
    depends_on:
      - pgsql-billionmail
      - redis-billionmail
    cap_add:
      - NET_BIND_SERVICE
    volumes:
      - ./conf/dovecot/conf.d:/etc/dovecot/conf.d
      - ./conf/dovecot/dovecot.conf:/etc/dovecot/dovecot.conf
      - ./conf/dovecot/rsyslog.conf:/etc/rsyslog.conf
      - ./logs/dovecot:/var/log/mail
      - ./ssl:/etc/ssl/mail
      - ./ssl-self-signed:/etc/ssl/ssl-self-signed
      - ./vmail-data:/var/vmail
      - ./rspamd-data:/var/lib/rspamd
      - ./postgresql-socket:/var/run/postgresql
    environment:
      - DBNAME=${DBNAME}
      - DBUSER=${DBUSER}
      - DBPASS=${DBPASS}
      - TZ=${TZ}
      - BILLIONMAIL_HOSTNAME=${BILLIONMAIL_HOSTNAME}
      - REDISPASS=${REDISPASS}
    ports:
      - "${IMAP_PORT:-143}:143"
      - "${IMAPS_PORT:-993}:993"
      - "${POP_PORT:-110}:110"
      - "${POPS_PORT:-995}:995"
    restart: always
    ulimits:
      nproc: 65535
      nofile:
        soft: 20000
        hard: 40000
    networks:
      - coolify

  ##############################################################################
  # 5) Postfix: SMTP/MTA
  ##############################################################################
  postfix-billionmail:
    image: billionmail/postfix:1.3
    container_name: billionmail-postfix-billionmail-1
    hostname: postfix
    depends_on:
      pgsql-billionmail:
        condition: service_healthy
    volumes:
      - ./conf/postfix/main.cf:/etc/postfix/main.cf
      - ./conf/postfix/master.cf:/etc/postfix/master.cf
      - ./conf/postfix/conf:/etc/postfix/conf
      - ./conf/postfix/sql:/etc/postfix/sql
      - ./conf/postfix/rsyslog.conf:/etc/rsyslog.conf
      - ./logs/postfix:/var/log/mail
      - ./ssl:/etc/ssl/mail
      - ./postfix-data:/var/spool/postfix
      - ./rspamd-data:/var/lib/rspamd
      - ./postgresql-socket:/var/run/postgresql
    environment:
      - TZ=${TZ}
      - DBNAME=${DBNAME}
      - DBUSER=${DBUSER}
      - DBPASS=${DBPASS}
      - REDISPASS=${REDISPASS}
      - BILLIONMAIL_HOSTNAME=${BILLIONMAIL_HOSTNAME}
    cap_add:
      - NET_BIND_SERVICE
    ports:
      - "${SMTP_PORT:-25}:25"
      - "${SMTPS_PORT:-465}:465"
      - "${SUBMISSION_PORT:-587}:587"
    restart: always
    networks:
      - coolify

  ##############################################################################
  # 6) Roundcube webmail (PHP)
  ##############################################################################
  webmail-billionmail:
    image: roundcube/roundcubemail:1.6.10-fpm-alpine
    container_name: billionmail-webmail-billionmail-1
    hostname: roundcube
    depends_on:
      - pgsql-billionmail
      - dovecot-billionmail
      - postfix-billionmail
    volumes:
      - ./webmail-data:/var/www/html
      - ./conf/webmail/mime.types:/var/roundcube/config/mime.types
      - ./conf/webmail:/var/roundcube/config
      - ./conf/php:/usr/local/etc
      - ./php-sock/:/var/run/
    environment:
      - TZ=${TZ}
      - ROUNDCUBEMAIL_DB_TYPE=pgsql
      - ROUNDCUBEMAIL_DB_HOST=pgsql
      - ROUNDCUBEMAIL_DB_NAME=${DBNAME}
      - ROUNDCUBEMAIL_DB_USER=${DBUSER}
      - ROUNDCUBEMAIL_DB_PASSWORD=${DBPASS}
      - ROUNDCUBEMAIL_DEFAULT_HOST=dovecot
      - ROUNDCUBEMAIL_DEFAULT_PORT=${IMAP_PORT:-143}
      - ROUNDCUBEMAIL_SMTP_SERVER=postfix
      - ROUNDCUBEMAIL_SMTP_PORT=${SMTP_PORT:-25}
      - ROUNDCUBEMAIL_REQUEST_PATH=/roundcube
    restart: always
    networks:
      - coolify

  ##############################################################################
  # 7) BillionMail core (HTTP managed by Traefik)
  ##############################################################################
  core-billionmail:
    image: billionmail/core:1.5
    container_name: billionmail-core-billionmail-1
    hostname: core-manage
    depends_on:
      pgsql-billionmail:
        condition: service_healthy
    volumes:
      - ./ssl:/etc/ssl/mail
      - ./ssl-self-signed:/etc/ssl/ssl-self-signed
      - ./conf/core/fail2ban/filter.d:/etc/fail2ban/filter.d
      - ./conf/core/fail2ban/jail.d:/etc/fail2ban/jail.d
      - ./logs/fail2ban:/var/log/fail2ban
      - ./postgresql-socket:/opt/billionmail/postgresql-socket
      - ./php-sock:/opt/billionmail/php-sock
      - ./rspamd-data:/opt/billionmail/rspamd-data
      - ./webmail-data:/opt/billionmail/webmail-data
      - ./.env:/opt/billionmail/.env
      - ./conf:/opt/billionmail/conf
      - ./logs:/opt/billionmail/logs
      - ./logs/core:/opt/billionmail/core/logs
      - ./core-data:/opt/billionmail/core/data
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - TZ=${TZ}
      - FAIL2BAN_INIT=${FAIL2BAN_INIT:-y}
      - BILLIONMAIL_HOSTNAME=${BILLIONMAIL_HOSTNAME}
    cap_add:
      - NET_BIND_SERVICE
      - NET_ADMIN
      - NET_RAW
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.billionmail.rule=Host(`mail.ranked.hu`)"
      - "traefik.http.routers.billionmail.entrypoints=websecure"
      - "traefik.http.routers.billionmail.tls.certresolver=le"
    restart: always
    networks:
      - coolify

  ##############################################################################
  # 8) Composer service (runs `composer install` against ./core if you develop
  #    BillionMail locally; you can remove/comment out once you’ve built
  #    or uploaded your vendor directory)
  ##############################################################################
  composer:
    image: composer:2
    container_name: billionmail-composer-1
    working_dir: /app
    volumes:
      - ./core:/app
    command: ["install"]
    # You can run `docker-compose run composer` whenever you need to refresh 
    # your PHP dependencies. This service does not stay running.
    networks:
      - coolify

networks:
  coolify:
    external: true
